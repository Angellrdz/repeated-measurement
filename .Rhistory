# Gerekli paketleri yükle (bir defaya mahsus)
install.packages("tidyverse")
# Gerekli paketleri yükle (bir defaya mahsus)
install.packages("tidyverse")
install.packages("readxl")
install.packages("ez")
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
install.packages("ez")
install.packages("car")
install.packages("lme4")
install.packages("ez")
install.packages("ez")
install.packages("afex")
install.packages("readxl")
library(afex)
library(readxl)
library(tidyverse)
# Veriyi oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Long formata çevir
veri_long <- veri %>%
pivot_longer(cols = starts_with("test"),
names_to = "test_zamani",
values_to = "deger")
# Faktörler
veri_long$id <- as.factor(veri_long$id)
veri_long$test_zamani <- as.factor(veri_long$test_zamani)
# ANOVA (SPSS Type III uyumlu)
sonuc <- aov_car(deger ~ test_zamani + Error(id/test_zamani), data = veri_long, type = 3)
print(sonuc)
library(afex)
install.packages("afex")
install.packages(c('lme4', 'pbkrtest', 'lmerTest', 'car'))
install.packages(c('pbkrtest', 'quantreg', 'lme4'))
library(afex)
library(readxl)
library(tidyverse)
# Veriyi oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Long formata çevir
veri_long <- veri %>%
pivot_longer(cols = starts_with("test"),
names_to = "test_zamani",
values_to = "deger")
# Faktörler
veri_long$id <- as.factor(veri_long$id)
# Gerekli paketleri yükle (bir defaya mahsus)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("readxl")
install.packages("ez")
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
# Excel dosyasını oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Uzun formata çevir (wide → long)
veri_long <- veri %>%
pivot_longer(cols = starts_with("test"),
names_to = "test_zamani",
values_to = "deger")
# Faktörleri ayarla
veri_long$id <- as.factor(veri_long$id)  # Birey ID'si
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
# Excel dosyasını oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Sütun isimlerini kontrol et (önemli!)
print(colnames(veri))
# Uzun formata çevir ve faktörleri tanımla
veri_long <- veri %>%
pivot_longer(cols = starts_with("test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(no),               # 'no' sütunu birey ID'si ise
test_zamani = as.factor(test_zamani)
)
# Uzun formata çevir ve faktörleri tanımla
# Örnek: Gerçekten varsa 'id' adını kullanın (veya colnames() çıktısındaki adı)
veri_long <- veri %>%
pivot_longer(cols = starts_with("test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(id),  # BURADA 'id' sizin sütun adınız olmalı
test_zamani = as.factor(test_zamani)
)
colnames(veri)
# Uzun formata çevir ve faktörleri tanımla
# Örnek: Gerçekten varsa 'id' adını kullanın (veya colnames() çıktısındaki adı)
veri_long <- veri %>%
mutate(satir_id = row_number()) %>%  # Her birey için ID ekle
pivot_longer(cols = starts_with("Test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(satir_id),             # ID'yi faktöre çevir
test_zamani = as.factor(test_zamani)  # Zaman faktörü
)
# ezANOVA analizi
sonuc <- ezANOVA(
data = veri_long,
dv = deger,
wid = id,
within = test_zamani,
type = 3,
detailed = TRUE
)
print(sonuc)
ggplot(veri_long, aes(x = test_zamani, y = deger, group = id)) +
geom_line(alpha = 0.4, color = "gray") +         # Her bireyin çizgisi
stat_summary(aes(group = 1), fun = mean, geom = "line",
color = "blue", size = 1.2) +       # Ortalama çizgisi
stat_summary(aes(group = 1), fun.data = mean_se, geom = "errorbar",
width = 0.2, color = "blue") +      # Ortalama ± SE
labs(title = "Tekrarlı Ölçüm Sonuçları",
x = "Test Zamanı",
y = "Değer") +
theme_minimal()
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
library(ggplot2)
# Excel dosyasını oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Sütun isimlerini kontrol et (önemli!)
print(colnames(veri))
# Uzun formata çevir ve faktörleri tanımla
# Örnek: Gerçekten varsa 'id' adını kullanın (veya colnames() çıktısındaki adı)
veri_long <- veri %>%
mutate(satir_id = row_number()) %>%  # Her birey için ID ekle
pivot_longer(cols = starts_with("Test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(satir_id),             # ID'yi faktöre çevir
test_zamani = as.factor(test_zamani)  # Zaman faktörü
)
# ezANOVA analizi
sonuc <- ezANOVA(
data = veri_long,
dv = deger,
wid = id,
within = test_zamani,
type = 3,
detailed = TRUE
)
print(sonuc)
ggplot(veri_long, aes(x = test_zamani, y = deger, group = id)) +
geom_line(alpha = 0.4, color = "gray") +         # Her bireyin çizgisi
stat_summary(aes(group = 1), fun = mean, geom = "line",
color = "blue", size = 1.2) +       # Ortalama çizgisi
stat_summary(aes(group = 1), fun.data = mean_se, geom = "errorbar",
width = 0.2, color = "blue") +      # Ortalama ± SE
labs(title = "Tekrarlı Ölçüm Sonuçları",
x = "Test Zamanı",
y = "Değer") +
theme_minimal()
# ezANOVA analizi
sonuc <- ezANOVA(
data = veri_long,
dv = deger,
wid = id,
within = test_zamani,
type = 3,
detailed = TRUE,
return_aov = TRUE
)
print(sonuc)
# Kable ile yazdır
kable(anova_tablosu, caption = "EzANOVA Sonuçları")
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
library(ggplot2)
library(knitr)
# Excel dosyasını oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Sütun isimlerini kontrol et (önemli!)
print(colnames(veri))
# Uzun formata çevir ve faktörleri tanımla
# Örnek: Gerçekten varsa 'id' adını kullanın (veya colnames() çıktısındaki adı)
veri_long <- veri %>%
mutate(satir_id = row_number()) %>%  # Her test değeri için ID ekle
pivot_longer(cols = starts_with("Test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(satir_id),             # ID'yi faktöre çevir
test_zamani = as.factor(test_zamani)  # Zaman faktörü
)
# ezANOVA analizi
sonuc <- ezANOVA(
data = veri_long,
dv = deger,
wid = id,
within = test_zamani,
type = 3,
detailed = TRUE,
return_aov = TRUE
)
# ANOVA sonucunu tabloya dönüştür
anova_tablosu <- sonuc$ANOVA
# Kable ile yazdır
kable(anova_tablosu, caption = "EzANOVA Sonuçları")
ggplot(veri_long, aes(x = test_zamani, y = deger, group = id)) +
geom_line(alpha = 0.4, color = "gray") +         # Her test değerinin çizgisi
stat_summary(aes(group = 1), fun = mean, geom = "line",
color = "blue", size = 1.2) +       # Ortalama çizgisi
stat_summary(aes(group = 1), fun.data = mean_se, geom = "errorbar",
width = 0.2, color = "blue") +      # Ortalama ± SE
labs(title = "Tekrarlı Ölçüm Sonuçları",
x = "Test Zamanı",
y = "Değer") +
theme_minimal()
# Kable ile yazdır
veri_long %>%
group_by(test_zamani) %>%
summarise(ortalama = mean(deger, na.rm = TRUE)) %>%
kable(caption = "Test Zamanlarına Göre Ortalama Değerler")
kable(anova_tablosu, caption = "EzANOVA Sonuçları")
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
library(ggplot2)
library(knitr)
# Excel dosyasını oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Sütun isimlerini kontrol et (önemli!)
print(colnames(veri))
# Uzun formata çevir ve faktörleri tanımla
# Örnek: Gerçekten varsa 'id' adını kullanın (veya colnames() çıktısındaki adı)
veri_long <- veri %>%
mutate(satir_id = row_number()) %>%  # Her test değeri için ID ekle
pivot_longer(cols = starts_with("Test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(satir_id),             # ID'yi faktöre çevir
test_zamani = as.factor(test_zamani)  # Zaman faktörü
)
# ezANOVA analizi
sonuc <- ezANOVA(
data = veri_long,
dv = deger,
wid = id,
within = test_zamani,
type = 3,
detailed = TRUE,
return_aov = TRUE
)
# ANOVA sonucunu tabloya dönüştür
anova_tablosu <- sonuc$ANOVA
veri_long %>%
group_by(test_zamani) %>%
summarise(
ortalama = mean(deger, na.rm = TRUE),
sd = sd(deger, na.rm = TRUE)
)
# Sonuçları tabloya yazdır
kable(caption = "Test Zamanlarına Göre Ortalama Değerler")
kable(anova_tablosu, caption = "EzANOVA Sonuçları")
kable(caption = "Test Zamanlarına Göre Ortalama Değerler")
# ANOVA sonucunu tabloya dönüştür
anova_tablosu <- sonuc$ANOVA
veri_long %>%
group_by(test_zamani) %>%
summarise(
ortalama = mean(deger, na.rm = TRUE),
sd = sd(deger, na.rm = TRUE)
)
kable(caption = "Test Zamanlarına Göre Ortalama Değerler")
kable(anova_tablosu, caption = "EzANOVA Sonuçları")
# Gerekli paketleri yükle (ilk seferde)
# install.packages("tidyverse")
# install.packages("readxl")
# install.packages("ez")
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
library(ggplot2)
library(knitr)
# Excel dosyasını oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Sütun isimlerini kontrol et (önemli!)
print(colnames(veri))
# Uzun formata çevir ve faktörleri tanımla
# Örnek: Gerçekten varsa 'id' adını kullanın (veya colnames() çıktısındaki adı)
veri_long <- veri %>%
mutate(satir_id = row_number()) %>%  # Her test değeri için ID ekle
pivot_longer(cols = starts_with("Test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(satir_id),             # ID'yi faktöre çevir
test_zamani = as.factor(test_zamani)  # Zaman faktörü
)
# ezANOVA analizi
sonuc <- ezANOVA(
data = veri_long,
dv = deger,
wid = id,
within = test_zamani,
type = 3,
detailed = TRUE,
return_aov = TRUE
)
# ANOVA sonucunu tabloya dönüştür
anova_tablosu <- sonuc$ANOVA
veri_long %>%
group_by(test_zamani) %>%
summarise(
ortalama = mean(deger, na.rm = TRUE),
sd = sd(deger, na.rm = TRUE)
)
kable(caption = "Test Zamanlarına Göre Ortalama Değerler")
kable(anova_tablosu, caption = "EzANOVA Sonuçları")
# Kütüphaneleri çağır
library(tidyverse)
library(readxl)
library(ez)
library(ggplot2)
library(knitr)
# Excel dosyasını oku
veri <- read_excel("tekrarli_olcum_ornek_no_id.xlsx")
# Sütun isimlerini kontrol et (önemli!)
print(colnames(veri))
# Uzun formata çevir ve faktörleri tanımla
# Örnek: Gerçekten varsa 'id' adını kullanın (veya colnames() çıktısındaki adı)
veri_long <- veri %>%
mutate(satir_id = row_number()) %>%  # Her test değeri için ID ekle
pivot_longer(cols = starts_with("Test"),
names_to = "test_zamani",
values_to = "deger") %>%
mutate(
id = as.factor(satir_id),             # ID'yi faktöre çevir
test_zamani = as.factor(test_zamani)  # Zaman faktörü
)
# ezANOVA analizi
sonuc <- ezANOVA(
data = veri_long,
dv = deger,
wid = id,
within = test_zamani,
type = 3,
detailed = TRUE,
return_aov = TRUE
)
# ANOVA sonucunu tabloya dönüştür
anova_tablosu <- sonuc$ANOVA
veri_long %>%
group_by(test_zamani) %>%
summarise(
ortalama = mean(deger, na.rm = TRUE),
sd = sd(deger, na.rm = TRUE)
)
kable(caption = "Test Zamanlarına Göre Ortalama Değerler")
kable(anova_tablosu, caption = "EzANOVA Sonuçları")
